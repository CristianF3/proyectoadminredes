services:

  user-service:
    build:
      context: ./user-service
    container_name: user-service
    networks:
      - backend-network
    environment:
      - DATABASE_URL=sqlite:///./user_service.db
    volumes:
      - user_data:/app/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://user-service:5000/api/users/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    expose:
      - "5000"

  task-service:
    build:
      context: ./task-service
    container_name: task-service
    networks:
      - backend-network
    environment:
      - DATABASE_URL=sqlite:///./task_service.db
      - USER_SERVICE_URL=http://user-service:5000
    volumes:
      - task_data:/app/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://task-service:5001/api/tasks/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    expose:
      - "5001"

  nginx-proxy-manager:
    image: jc21/nginx-proxy-manager:latest
    container_name: nginx-proxy-manager
    restart: always
    ports:
      - "80:80"       # HTTP
      - "443:443"     # HTTPS
      - "81:81"       # Dashboard admin NPM
    networks:
      - backend-network
    volumes:
      - npm_data:/data
      - npm_letsencrypt:/etc/letsencrypt
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:81/api/nginx/proxy-hosts"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  backend-network:
    driver: bridge

volumes:
  user_data:
  task_data:
  npm_data:
  npm_letsencrypt:
